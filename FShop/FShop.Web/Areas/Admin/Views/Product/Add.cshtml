@model FShop.Web.Models.ProductViewModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var contentItemList = new List<string>();
    if (Model != null)
    {
        contentItemList = Model.Content.Split(FShop.Common.Constants.END_CHAR).ToList();
    }
}

@section header{
    Thêm sản phẩm
}
@using (Html.BeginForm("Add", "Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="wrap-img d-flex w-100">
                    <div class="bg-img">
                        <input name="imageFileList" type="file" class="form-control input-file" />
                    </div>
                </div>
                <span class="btn btn-success btn-add-img"><i class="fa fa-plus"></i></span>
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Promotion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Promotion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Promotion, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model == null)
                {
                    <textarea class="textarea form-control" name="Description"></textarea>
                }
                else
                {
                    <textarea class="textarea form-control" name="Description">@Model.Description</textarea>
                }
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table width="800">
                    <thead>
                    <th>Nhãn</th>
                    <th>Nội dung</th>
                    </thead>
                    <tbody id="content-body">
                        <tr class="trTemp hidden">
                            <td>
                                <input name="txtLabel" class="form-control" />
                            </td>
                            <td>
                                <input name="txtContent" class="form-control" />
                            </td>
                            <td>
                                <span class="btn btn-danger btn-remove-content"><i class="fa fa-minus"></i></span>
                            </td>
                        </tr>
                        @if (contentItemList != null && contentItemList.Count > 0)
                        {
                            for (int i = 0; i < contentItemList.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input name="txtLabel" class="form-control" value="@contentItemList[i].Split(FShop.Common.Constants.BETWEEN_CHAR)[0]" />
                                    </td>
                                    <td>
                                        <input name="txtContent" class="form-control" value="@contentItemList[i].Split(FShop.Common.Constants.BETWEEN_CHAR)[1]" />
                                    </td>
                                    <td>
                                        <span class="btn btn-danger btn-remove-content"><i class="fa fa-minus"></i></span>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <span class="btn btn-success btn-add-content"><i class="fa fa-plus"></i></span>
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsFreeShip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFreeShip)
                    @Html.ValidationMessageFor(model => model.IsFreeShip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInstallment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsInstallment)
                    @Html.ValidationMessageFor(model => model.IsInstallment, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.BrandID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BrandID, (IEnumerable<SelectListItem>)ViewBag.brandSL, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.SupplierID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SupplierID, (IEnumerable<SelectListItem>)ViewBag.supplierSL, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, (IEnumerable<SelectListItem>)ViewBag.productCategorySL, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeyword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section script{
    <script src="https://cdn.tiny.cloud/1/t07jvsudyvcchkig73cz26tvqqqy3ncrbqt77k8bubg8sa7b/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="~/Assets/Admin/js/MyScript/ProductScrip4.js"></script>
    <script>tinymce.init({ selector: '.textarea' });</script>
}